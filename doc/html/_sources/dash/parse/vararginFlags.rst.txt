dash.parse.vararginFlags
========================
Parse flags from varargin

----

Syntax
------

.. raw:: html

    <pre>

.. rst-class:: syntax

| :ref:`flags = dash.parse.vararginFlags(inputs) <dash.parse.vararginFlags.syntax1>`
| :ref:`flags = dash.parse.vararginFlags(inputs, spacing) <dash.parse.vararginFlags.syntax2>`
| :ref:`flags = dash.parse.vararginFlags(inputs, spacing, nPrevious, header) <dash.parse.vararginFlags.syntax3>`

.. raw:: html

    </pre>

----

Description
-----------

.. raw:: html

    <pre>

.. _dash.parse.vararginFlags.syntax1:

.. rst-class:: syntax

| :ref:`flags <dash.parse.vararginFlags.output.flags>` = dash.parse.vararginFlags(:ref:`inputs <dash.parse.vararginFlags.input.inputs>`)

.. raw:: html

    </pre>

Parses a cell vector of flags into a string vector. Throws error if any elements are not flags.


.. raw:: html

    <pre>

.. _dash.parse.vararginFlags.syntax2:

.. rst-class:: syntax

| :ref:`flags <dash.parse.vararginFlags.output.flags>` = dash.parse.vararginFlags(:ref:`inputs <dash.parse.vararginFlags.input.inputs>`, :ref:`spacing <dash.parse.vararginFlags.input.spacing>`)

.. raw:: html

    </pre>

Parses a cell vector of values with flags beginning on the first element, and spaced with a given spacing.


.. raw:: html

    <pre>

.. _dash.parse.vararginFlags.syntax3:

.. rst-class:: syntax

| :ref:`flags <dash.parse.vararginFlags.output.flags>` = dash.parse.vararginFlags(:ref:`inputs <dash.parse.vararginFlags.input.inputs>`, :ref:`spacing <dash.parse.vararginFlags.input.spacing>`, :ref:`nPrevious <dash.parse.vararginFlags.input.nPrevious>`, :ref:`header <dash.parse.vararginFlags.input.header>`)

.. raw:: html

    </pre>

Customize error messages and IDs.


----

Input Arguments
---------------

.. rst-class:: collapse-examples

.. _dash.parse.vararginFlags.input.inputs:

inputs
++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input1" checked="checked"><label for="input1"><strong>inputs</strong></label><div class="content">

| *cell* *vector*
| The varargin being parsed

.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

.. _dash.parse.vararginFlags.input.spacing:

spacing
+++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input2" checked="checked"><label for="input2"><strong>spacing</strong></label><div class="content">

| *scalar* *positive* *integer*
| The spacing of flags along varargin

.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

.. _dash.parse.vararginFlags.input.nPrevious:

nPrevious
+++++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input3" checked="checked"><label for="input3"><strong>nPrevious</strong></label><div class="content">

| *scalar* *positive* *integer*
| The number of inputs before varargin in the calling function. (Ignoring object reference in class methods.

.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

.. _dash.parse.vararginFlags.input.header:

header
++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input4" checked="checked"><label for="input4"><strong>header</strong></label><div class="content">

| *string* *scalar*
| Header for thrown error IDs.

.. raw:: html

    </div></section>


----

Output Arguments
----------------

.. rst-class:: collapse-examples

.. _dash.parse.vararginFlags.output.flags:

flags
+++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="output1" checked="checked"><label for="output1"><strong>flags</strong></label><div class="content">

| *string* *vector*
| The ordered list of flags.

.. raw:: html

    </div></section>


