dash.assert.indexCollection
===========================
Throw error if input is not a collection of indices

----

Syntax
------

.. raw:: html

    <pre>

.. rst-class:: syntax

| :ref:`indices = dash.assert.indexCollection(indices, nDims, dimLengths) <dash.assert.indexCollection.syntax1>`
| :ref:`indices = dash.assert.indexCollection(indices, nDims, dimLengths, dimNames, header) <dash.assert.indexCollection.syntax2>`

.. raw:: html

    </pre>

----

Description
-----------

.. raw:: html

    <pre>

.. _dash.assert.indexCollection.syntax1:

.. rst-class:: syntax

| :ref:`indices <dash.assert.indexCollection.output.indices>` = dash.assert.indexCollection(:ref:`indices <dash.assert.indexCollection.input.indices>`, :ref:`nDims <dash.assert.indexCollection.input.nDims>`, :ref:`dimLengths <dash.assert.indexCollection.input.dimLengths>`)

.. raw:: html

    </pre>

Requires indices to either be a cell vector with one element per dimension (allows a direct vector of indices if there is a single dimension). Each cell must hold a valid vector of logical or linear indices for the dimension. If these requirements are not met, throws an error. If met, returns the indices as a cell vector of sets of linear indices.


.. raw:: html

    <pre>

.. _dash.assert.indexCollection.syntax2:

.. rst-class:: syntax

| :ref:`indices <dash.assert.indexCollection.output.indices>` = dash.assert.indexCollection(:ref:`indices <dash.assert.indexCollection.input.indices>`, :ref:`nDims <dash.assert.indexCollection.input.nDims>`, :ref:`dimLengths <dash.assert.indexCollection.input.dimLengths>`, :ref:`dimNames <dash.assert.indexCollection.input.dimNames>`, :ref:`header <dash.assert.indexCollection.input.header>`)

.. raw:: html

    </pre>

Customize the header in thrown error IDs.


----

Input Arguments
---------------

.. rst-class:: collapse-examples

.. _dash.assert.indexCollection.input.indices:

indices
+++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input1" checked="checked"><label for="input1"><strong>indices</strong></label><div class="content">

| The input being checked

.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

.. _dash.assert.indexCollection.input.nDims:

nDims
+++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input2" checked="checked"><label for="input2"><strong>nDims</strong></label><div class="content">

| *scalar* *positive* *integer*
| The number of dimensions being indexed

.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

.. _dash.assert.indexCollection.input.dimLengths:

dimLengths
++++++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input3" checked="checked"><label for="input3"><strong>dimLengths</strong></label><div class="content">

| *vector*, *positive* *integers* [*nDims*]
| The length of each dimension being indexed.

.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

.. _dash.assert.indexCollection.input.dimNames:

dimNames
++++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input4" checked="checked"><label for="input4"><strong>dimNames</strong></label><div class="content">

| *string* *vector* [*nDims*]
| The name of each dimension being indexed

.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

.. _dash.assert.indexCollection.input.header:

header
++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input5" checked="checked"><label for="input5"><strong>header</strong></label><div class="content">

| *string* *scalar*
| Header for thrown error IDs.

.. raw:: html

    </div></section>


----

Output Arguments
----------------

.. rst-class:: collapse-examples

.. _dash.assert.indexCollection.output.indices:

indices
+++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="output1" checked="checked"><label for="output1"><strong>indices</strong></label><div class="content">

| *cell* *vector* [*nDims*] {*vector*, *linear* *indices*}
| The indices for each dimension organized as a cell vector of linear indices.

.. raw:: html

    </div></section>


