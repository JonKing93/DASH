gridfile.addDimension
=====================
Add a new dimension to a .grid file

----

Syntax
------

.. raw:: html

    <pre>

.. rst-class:: syntax

| :ref:`obj.addDimension(dimension, metadata) <gridfile.addDimension.syntax1>`

.. raw:: html

    </pre>

----

Description
-----------

.. raw:: html

    <pre>

.. _gridfile.addDimension.syntax1:

.. rst-class:: syntax

| obj.addDimension(:ref:`dimension <gridfile.addDimension.input.dimension>`, :ref:`metadata <gridfile.addDimension.input.metadata>`)

.. raw:: html

    </pre>

Adds a new dimension and associated metadata to a gridfile. The new dimension is treated as a trailing singleton dimensions in the existing data grid. Consequently, the metadata for the new dimension must be a row vector or scalar.


----

Examples
--------

.. rst-class:: collapse-examples

Add a dimension to a gridfile
+++++++++++++++++++++++++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="example1"><label for="example1"><strong>Add a dimension to a gridfile</strong></label><div class="content">


Create a gridfile:

.. rst-class:: no-margin

::

    grid = gridfile('my-gridfile.grid')


.. rst-class:: example-output

::

    grid = 
          ...
          Dimension Sizes:
               lon: 360    (   0 to 359 )    
               lat: 181    ( -90 to 90  )
              time: 156    (1850 to 2005)
          ...


We can see this gridfile manages a 3D dataset over latitude, longitude, and time.

Let's say we want to add a "run" dimension to the gridfile to include datasets from different ensemble members. Then:

.. rst-class:: no-margin

::

    newDimension = 'run';
    newMetadata = 1;
    grid.addDimension(newDimension, newMetadata);
    
    disp(grid)


.. rst-class:: example-output

::

    grid = 
          ...
          Dimension Sizes:
               lon: 360    (   0 to 359 )    
               lat: 181    ( -90 to 90  )
              time: 156    (1850 to 2005)
               run:   1    (   1 to 1   )
          ...


The gridfile now includes a "run" dimension. Note that the metadata for the new dimension must have a single row. This is because the new dimension is treated as a trailing singleton dimension in the existing data grid. Metadata with multiple rows will throw an error, for example:
    
.. rst-class:: no-margin

::

    grid.addDimension('lev', [1;2;3])


.. rst-class:: example-output error-message 

::

    The metadata for the new "lev" dimension must have a single row, but it has 3 rows instead


To add a dimension to a gridfile with a length greater than 1, combine addDimension with the "expand" command. (See the next example for details)



.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

Add non-singleton dimension to a gridfile
+++++++++++++++++++++++++++++++++++++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="example2"><label for="example2"><strong>Add non-singleton dimension to a gridfile</strong></label><div class="content">


To add a dimension that has a length greater than 1 to a gridfile, combine the addDimension and expand commands. For example:

Create a gridfile:

.. rst-class:: no-margin

::

    grid = gridfile('my-gridfile.grid')


.. rst-class:: example-output

::

    grid = 
          ...
          Dimension Sizes:
               lon: 360    (   0 to 359 )    
               lat: 181    ( -90 to 90  )
              time: 156    (1850 to 2005)
          ...


We can see this gridfile manages a 3D dataset over latitude, longitude, and time.

Let's say we want to add a "run" dimension to index data from 10 ensemble members. Then we can do:

.. rst-class:: no-margin

::

    grid.addDimension('run', 1);
    grid.expand('run', (2:10)');
    disp(grid)


.. rst-class:: example-output

::

    grid = 
          ...
          Dimension Sizes:
               lon: 360    (   0 to 359 )    
               lat: 181    ( -90 to 90  )
              time: 156    (1850 to 2005)
               run:  10    (   1 to 10  )
          ...

.. raw:: html

    </div></section>


----

Input Arguments
---------------

.. rst-class:: collapse-examples

.. _gridfile.addDimension.input.dimension:

dimension
+++++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input1" checked="checked"><label for="input1"><strong>dimension</strong></label><div class="content">

| *string* *scalar*
| The name of a new dimension to add to the gridfile. Must be a recognized grid dimension. (See gridMetadata.dimensions for a list of recognzied dimensions).

.. raw:: html

    </div></section>



.. rst-class:: collapse-examples

.. _gridfile.addDimension.input.metadata:

metadata
++++++++

.. raw:: html

    <section class="accordion"><input type="checkbox" name="collapse" id="input2" checked="checked"><label for="input2"><strong>metadata</strong></label><div class="content">

| *row* *vector*, *numeric* | *logical* | *char* | *string* | *cellstring* | *datetime*
| metadata values for the new, singleton dimension. Cellstring values will be converted to string.

.. raw:: html

    </div></section>


