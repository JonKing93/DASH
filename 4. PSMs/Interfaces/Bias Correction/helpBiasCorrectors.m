function[] = helpBiasCorrectors( name )
%% This prints information on available bias correctors to the console.
% It also provides information for specific correctors.
%
% helpBiasCorrectors
% Provides the names of available bias correctors along with a brief
% description.
%
% helpBiasCorrectors( name )
% Provides more detailed information on a specific bias corrector.

% List the available correctors
if nargin == 0
   fprintf( sprintf( ['Available Bias Correctors:', newline, ...
   '\tMean: Adjusts the mean of the values from the model prior given to a PSM to', ...
   newline, sprintf('\t\tmatch the mean of a target dataset.'), ...
   newline, newline...
   '\tRenorm: Adjusts the mean and standard deviation of values given to a PSM to', ...
   newline, sprintf('\t\tmatch a target dataset.'), newline ] ) ); 

% Mean adjustment instructions
elseif strcmpi(name, 'mean')
    fprintf( sprintf( ['Mean Adjustment bias corrector how-to:', newline, ...
        '\tStart by determining the additive constant needed to adjust the mean of', newline,...
        '\tthe prior to match the target. This may be done offline, or using the', newline, ...
        '\tfunction "getMeanAdjustment.m".', newline, newline, ...
        '\tActivate the bias corrector using the .useMeanCorrector method of the PSM.', newline, ...
        '\tUsage is:', newline, '\t\t >> myPSM.useMeanCorrector( add );', newline ]));
    

% Renormalization instructions
elseif strcmpi(name, 'renorm')
    fprintf( sprintf( ['Renorm bias corrector how-to:', newline, ...
        '\tStart by determining the additive and multiplicative constants needed to', newline, ...
        '\tadjust the mean and variance of the prior to match the target. This may be', newline, ...
        '\tdone offline, or by using the function "getRenormalization.m".', newline, newline, ...
        '\tActivate the bias corrector using the .useRenormCorrector method of the PSM.', newline, ...
        '\tUsage is:', newline, '\t\t >> myPSM.useRenormCorrector( timesConstant, addConstant )', newline] ) );
    
    
% Error case
else
    error('Unrecognized name');
end

end
    